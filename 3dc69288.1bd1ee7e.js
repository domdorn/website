(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{526:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/pr-decoration-example1-b96693acca5df71f59984bbea656ed53.png"},527:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/pr-decoration-example2-4d43624423a3c3e5e07af24ce8fbfa8c.png"},528:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/pr-decoration-status-check-be5589a1948757d11717ca4ee3f565bd.png"},529:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/pr-decoration-sonarqube-5badae0adf551da82e89574f8eb7d702.png"},79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(91)),i={title:"Pull Request Decoration"},s={unversionedId:"setup/pr-decoration",id:"setup/pr-decoration",isDocsHomePage:!1,title:"Pull Request Decoration",description:"Starting from version 7.8.0, sonar-scala can be run in a decoration mode,",source:"@site/docs/setup/pr-decoration.mdx",slug:"/setup/pr-decoration",permalink:"/docs/setup/pr-decoration",editUrl:"https://github.com/sonar-scala/website/edit/master/docs/setup/pr-decoration.mdx",version:"current",sidebar:"docs",previous:{title:"sbt-sonar",permalink:"/docs/setup/sbt-sonar"},next:{title:"Scalastyle",permalink:"/docs/rules/scalastyle"}},c=[{value:"Configuration",id:"configuration",children:[]},{value:"Usage",id:"usage",children:[]}],l={toc:c};function u(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Starting from version ",Object(o.b)("inlineCode",{parentName:"p"},"7.8.0"),", sonar-scala can be run in a decoration mode,\nwhich can analyse GitHub pull requests and make comments on any new issues\ndirectly on the pull request. Version ",Object(o.b)("inlineCode",{parentName:"p"},"8.4.0")," and later support\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/enterprise"}),"GitHub Enterprise"),"."),Object(o.b)("p",null,"This functionality is similar to what was provided by the\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.sonarqube.org/display/PLUG/GitHub+Plugin"}),"GitHub Plugin"),", which\nwas deprecated in SonarQube 7.2 and replaced by similar functionality in the\npaid Developer Edition. SonarCloud also offers PR decoration, but it requires a\npaid subscription for private projects."),Object(o.b)("div",{className:"alert alert--info",role:"alert"},"sonar-scala brings Github PR decoration functionality for free to the Community Edition of SonarQube!"),Object(o.b)("p",null,"See some examples below:"),Object(o.b)("p",null,Object(o.b)("img",{src:n(526).default})),Object(o.b)("p",null,Object(o.b)("img",{src:n(527).default})),Object(o.b)("p",null,"sonar-scala also reports a status check at the end of the analysis - passed if\nno critical or blocker issues are found, or failed otherwise."),Object(o.b)("p",null,Object(o.b)("img",{src:n(528).default})),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Create a new dedicated Github account (you can use your existing bot/CI\naccount if you already have one)."),Object(o.b)("li",{parentName:"ul"},"Generate a new personal access token for your account. The token can be\ngenerated in the ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/settings/tokens"}),"developer settings")," on\nGithub. Select the ",Object(o.b)("inlineCode",{parentName:"li"},"public_repo")," scope for public repositories or ",Object(o.b)("inlineCode",{parentName:"li"},"repo")," for\nprivate repositories (or a mix of public and private repositories)."),Object(o.b)("li",{parentName:"ul"},"Make sure you give your user write permissions to the repositories you want to\ndecorate your PRs for, otherwise sonar-scala will fail as it won't be able to\nset a status of the PR check.")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Before you execute PR decoration, you need to check out the latest commit of the\nbranch which was used to open the pull request. Once you've done that, you can\nrun sonar-scala in decoration mode by setting the following properties:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"sonar.scala.pullrequest.provider")," - currently, only ",Object(o.b)("inlineCode",{parentName:"li"},"github")," is supported"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"sonar.scala.pullrequest.number")," - number of the pull request; if you use\nCircleCI, you can use the ",Object(o.b)("inlineCode",{parentName:"li"},"CIRCLE_PR_NUMBER")," env variable, Travis has\n",Object(o.b)("inlineCode",{parentName:"li"},"TRAVIS_PULL_REQUEST")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"sonar.scala.pullrequest.github.repository")," - name of the repository\nincluding organisation name in the following format ",Object(o.b)("inlineCode",{parentName:"li"},"org/project"),", e.g.\n",Object(o.b)("inlineCode",{parentName:"li"},"mwz/sonar-scala")," or ",Object(o.b)("inlineCode",{parentName:"li"},"scala/scala"),", etc."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"sonar.scala.pullrequest.github.oauth")," - Github personal access token that\nyou generated in the previous step")),Object(o.b)("p",null,"Optional:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"sonar.scala.pullrequest.github.apiurl")," - specify GitHub API url for GitHub\nEnterprise, e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"https://github.mycompany.com/api/v3"),". This property defaults\nto the public GitHub API - ",Object(o.b)("inlineCode",{parentName:"p"},"https://api.github.com"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"sonar.scala.pullrequest.dryrun"),' - execute PR decoration in "dry run" mode\n(sonar-scala will not post the results to Github). This setting is useful for\ntesting purposes in combination with ',Object(o.b)("inlineCode",{parentName:"p"},"sonar.verbose=true"),". You usually won't\nneed to use this setting, unless you run into any issues."))),Object(o.b)("p",null,"Once you run sonar-scala in decoration mode, instead of sending the results to\nSonarQube it will post the relevant comments to Github, which results in\ncreating an empty project in SonarQube. This is necessary to make this feature\nwork since the Community Edition of SonarQube doesn't have the support for\nbranch analysis. sonar-scala works around that limitation by having an empty\nproject so that it can still be executed, analyse your code and post any\ncomments back to Github."),Object(o.b)("p",null,"You can create an empty project yourself, or you can let sonar-scala do this for\nyou. If your SonarQube instance requires authentication to execute an analysis,\nyou need to make sure that your user has the right permissions to create a new\nproject and execute an analysis, or just the permission to execute analysis if\nyou created a new project yourself. Once you created a new blank project, you\ncan use it across all of your projects."),Object(o.b)("p",null,Object(o.b)("img",{src:n(529).default})),Object(o.b)("p",null,"The following example shows how to run sonar-scala in decoration mode for pull\nrequest ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/mwz/sonar-scala-pr-annotation-example/pull/1"}),"1")," in\nthe\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/mwz/sonar-scala-pr-annotation-example"}),"mwz/sonar-scala-pr-annotation-example"),'\nrepository on Github. Notice the project name and key are set to match the\ndedicated blank project in SonarQube, which isn\'t the same project you would\nnormally use to execute an analysis in a "normal" mode.'),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sbt \\\n  -Dsonar.host.url=http://localhost \\\n  -Dsonar.projectName='PR Decoration' \\\n  -Dsonar.projectKey=pr-decoration \\\n  -Dsonar.scala.pullrequest.provider=github \\\n  -Dsonar.scala.pullrequest.number=1 \\\n  -Dsonar.scala.pullrequest.github.repository=mwz/sonar-scala-pr-annotation-example \\\n  -Dsonar.scala.pullrequest.github.oauth=REDACTED \\\n  sonarScan\n")),Object(o.b)("p",null,"If you want to have this automated by your CI, which is ideally how it's\nintended to be used, the pull request setting will be different for each pull\nrequest. Most of the modern CI tools allow you to use a built-in environment\nvariable to get the current pull request number - as mentioned previously,\nCircleCI has ",Object(o.b)("inlineCode",{parentName:"p"},"CIRCLE_PR_NUMBER")," and Travis provides ",Object(o.b)("inlineCode",{parentName:"p"},"TRAVIS_PULL_REQUEST"),"."),Object(o.b)("div",{className:"alert alert--warning",role:"alert"},"Please remember that if you use the Scapegoat integration, you still need to generate Scapegoat report before executing sonar-scala otherwise any Scapegoat issues in your project won't be reported back to Github; the same applies to Scoverage."))}u.isMDXComponent=!0},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||o;return n?r.a.createElement(m,s(s({ref:t},l),{},{components:n})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);